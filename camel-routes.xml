https://docs.axway.com/bundle/DecisionInsight_LATEST_allOS_en_HTML5/page/apache_camel_3_migration_guide.html

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring https://camel.apache.org/schema/spring/camel-spring.xsd ">

    <bean id="trustAllHttpClientConfigurer" class="ru.seventech.esb.technoprom.config.TrustAllHttpClientConfigurer"/>
    <bean id="organizationDataProcessor" class="ru.seventech.esb.technoprom.processor.OrganizationDataProcessor"/>
    <bean id="CamelCustomLogMask" class="ru.seventech.esb.technoprom.config.CustomMaskingFormatter"/>

    <camel:camelContext id="gate_rr_adapter" useMDCLogging="true" logMask="true">
        <!-- Обработчики исключений теперь внутри роутов -->
        <camel:restConfiguration contextPath="/private" apiContextPath="api-docs" apiContextListing="true" enableCORS="true">
            <camel:apiProperty key="cors" value="true"/>
            <camel:apiProperty key="base.path" value="rest"/>
            <camel:apiProperty key="api.version" value="1.0.0"/>
            <camel:apiProperty key="api.title" value="Адаптер Технопром"/>
            <camel:apiProperty key="api.description" value="Адаптер для доступа к сервисам Технопром"/>
            <camel:apiProperty key="api.contact.name" value="7tech"/>
        </camel:restConfiguration>

        <!-- Пример REST маршрута -->
        <camel:rest path="/v2/gate_rr_adapter">
            <camel:get uri="/docs">
                <camel:description>Документация</camel:description>
                <camel:route id="direct:ru.seventech.esb.router.docs.listener.v2">
                    <camel:removeHeaders pattern="*" excludePattern="X-Forwarded-Uri"/>
                    <camel:setHeader headerName="CamelHttpResponseCode">
                        <camel:constant>302</camel:constant>
                    </camel:setHeader>
                    <camel:choice>
                        <camel:when>
                            <camel:simple>${in.header.X-Forwarded-Uri} != null</camel:simple>
                            <camel:setProperty propertyName="uriPrefix">
                                <camel:simple>${in.header.X-Forwarded-Uri.substring(0, ${in.header.X-Forwarded-Uri.indexOf('private/v2')})}</camel:simple>
                            </camel:setProperty>
                            <camel:setHeader headerName="location">
                                <camel:simple>${exchangeProperty.uriPrefix}swagger-ui/?url=/private/v2/gate_rr_adapter/api-docs/gate_rr_adapter</camel:simple>
                            </camel:setHeader>
                        </camel:when>
                        <camel:otherwise>
                            <camel:setHeader headerName="location">
                                <camel:simple>/swagger-ui/?url=/private/v2/gate_rr_adapter/api-docs/gate_rr_adapter</camel:simple>
                            </camel:setHeader>
                        </camel:otherwise>
                    </camel:choice>
                </camel:route>
            </camel:get>

            <!-- POST createPackage -->
            <camel:post uri="/createPackage">
                <camel:description>Создание нового пакета</camel:description>
                <camel:param name="Authorization" type="header" required="true" description="Токен авторизации (Bearer)"/>
                <camel:param name="body" type="body" description="json - запрос подробности см. документацию" required="true"/>
                <camel:route>
                    <camel:setProperty propertyName="methodName">
                        <camel:simple>createPackage</camel:simple>
                    </camel:setProperty>
                    <camel:to uri="direct:getMethodStartTime"/>
                    <camel:to uri="log:ru.seventech.esb.technoprom.createPackage.v2.start?showAll=true"/>
                    <camel:log message="[ZERO-SIGN-LOG] Get 'createPackage' request with body ${body}"/>
                    <camel:setProperty propertyName="rosrgatewayToken">
                        <camel:method bean="authService" method="getToken"/>
                    </camel:setProperty>
                    <camel:doTry>
                        <camel:to uri="direct:ru.seventech.esb.technoprom.prepareRequest.v2"/>
                        <camel:unmarshal>
                            <camel:json library="Jackson" unmarshalTypeName="ru.seventech.esb.technoprom.api.CreatePackageRequest"/>
                        </camel:unmarshal>
                        <camel:setBody>
                            <camel:script engine="groovy">
                                def request = new ru.seventech.esb.technoprom.dto.CreatePackageRequestDto()
                                request.setType(exchange.in.body.getPackageType())
                                request.setData(exchange.in.body.getPackageData())
                                request.setOrgId(exchange.in.body.getOrgId())
                                request.setAgentId(exchange.in.body.getAgentId())
                                return request
                            </camel:script>
                        </camel:setBody>
                        <!-- ... продолжение маршрута ... -->
                    </camel:doTry>
                </camel:route>
            </camel:post>

            <!-- Другие методы REST API аналогично -->

        </camel:rest>

        <!-- Маршруты ниже остаются без изменений, только замена пространства имён camel:... -->

        <!-- route: saveDocument -->
        <camel:route id="ru.seventech.esb.technoprom.saveDocument.v2">
            <camel:from uri="direct:ru.seventech.esb.technoprom.saveDocument.v2"/>
            <camel:to uri="log:ru.seventech.esb.technoprom.saveDocument.v2.start"/>
            <!-- ... -->
        </camel:route>

        <!-- route: prepareRequest -->
        <camel:route id="ru.seventech.esb.technoprom.prepareRequest.v2">
            <camel:from uri="direct:ru.seventech.esb.technoprom.prepareRequest.v2"/>
            <camel:convertBodyTo type="java.lang.String"/>
            <camel:setProperty propertyName="requestBody">
                <camel:simple>${body}</camel:simple>
            </camel:setProperty>
            <camel:removeHeaders pattern="*"/>
            <camel:setHeader headerName="Authorization">
                <camel:simple>${exchangeProperty.rosrgatewayToken}</camel:simple>
            </camel:setHeader>
            <camel:setHeader headerName="CamelHttpMethod">
                <camel:constant>POST</camel:constant>
            </camel:setHeader>
            <camel:setHeader headerName="Content-Type">
                <camel:constant>application/json</camel:constant>
            </camel:setHeader>
            <camel:setBody>
                <camel:simple>${exchangeProperty.requestBody}</camel:simple>
            </camel:setBody>
        </camel:route>

        <!-- route: getMethodStartTime -->
        <camel:route id="getMethodStartTime">
            <camel:from uri="direct:getMethodStartTime"/>
            <camel:setProperty propertyName="methodStartTime">
                <camel:simple>${date:now:yyyy-MM-dd HH:mm:ss.SSS}</camel:simple>
            </camel:setProperty>
            <camel:setProperty propertyName="methodStartTimestamp">
                <camel:script engine="groovy">System.currentTimeMillis()</camel:script>
            </camel:setProperty>
        </camel:route>

        <!-- route: logMethodTiming -->
        <camel:route id="logMethodTiming">
            <camel:from uri="direct:logMethodTiming"/>
            <camel:choice>
                <camel:when>
                    <camel:simple>${exchangeProperty.methodName} == null</camel:simple>
                    <camel:setProperty propertyName="methodName">
                        <camel:simple>anonymous_method</camel:simple>
                    </camel:setProperty>
                </camel:when>
            </camel:choice>
            <camel:setProperty propertyName="methodEndTime">
                <camel:simple>${date:now:yyyy-MM-dd HH:mm:ss.SSS}</camel:simple>
            </camel:setProperty>
            <camel:setProperty propertyName="executionTimeMs">
                <camel:script engine="groovy">(System.currentTimeMillis() - exchange.properties.methodStartTimestamp)</camel:script>
            </camel:setProperty>
            <camel:process ref="mdcResponseTimeProcessor"/>
            <camel:log message="[TIMING] Method: ${exchangeProperty.methodName} Start: ${exchangeProperty.methodStartTime}
               End: ${exchangeProperty.methodEndTime} Duration: ${exchangeProperty.executionTimeMs} ms
                 Info: ${exchangeProperty.logInfo}"
                loggingLevel="INFO"/>
            <camel:process ref="mdcResponseTimeDeleteProcessor"/>
        </camel:route>
    </camel:camelContext>
</beans>
