<route id="ru.seventech.esb.technoprom.saveDocument.v2">
			<from uri="direct:ru.seventech.esb.technoprom.saveDocument.v2"/>
			<to uri="log:ru.seventech.esb.technoprom.saveDocument.v2.start"/>
			<setProperty name="documentId">
				<groovy>
					exchange.properties.document.get("documentId")
				</groovy>
			</setProperty>
			<!--Saving image-->
			<setProperty name="attachDocumentUrl">
				<simple>{{env:url_attachDocument_v2}}</simple>
			</setProperty>
			<setProperty name="attachDocumentUrlWithUid">
				<groovy>
					def attachDocumentUrlFormatted = sprintf(exchange.properties.attachDocumentUrl, [
					exchange.properties.packageId, exchange.properties.documentId
					])
					return attachDocumentUrlFormatted
				</groovy>
			</setProperty>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setBody>
				<groovy>
					import ru.seventech.esb.technoprom.dto.DocumentRequestUidDto
					def request = new DocumentRequestUidDto(exchange.properties.document.get('image').get('location'))
					return request
				</groovy>
			</setBody>
			<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachDocument.v2.beforeRequest?showAll=false"/>
			<log message="[ZERO-SIGN-LOG] [${exchangeProperty.packageId}] Send request http://${exchangeProperty.attachDocumentUrlWithUid} with body ${body}"/>
			<marshal>
				<json library="Jackson"/>
			</marshal>
			<toD uri="https://${exchangeProperty.attachDocumentUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
			<convertBodyTo type="java.lang.String"/>
			<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachDocument.v2.afterRequest?showAll=false"/>
			<!--Saving signature-->
			<setProperty name="attachSignatureUrl">
				<simple>{{env:url_attachSignature_v2}}</simple>
			</setProperty>
			<setProperty name="attachSignatureUrlWithUid">
				<groovy>
					def attachSignatureUrlFormatted = sprintf(exchange.properties.attachSignatureUrl, [
					exchange.properties.packageId, exchange.properties.documentId
					])
					return attachSignatureUrlFormatted
				</groovy>
			</setProperty>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<choice>
				<when>
					<groovy>exchange.properties.document.get('sig') instanceof List</groovy>
					<!--					<process ref="testProcessor"/>-->
					<loop>
						<groovy>
							exchange.properties.document.get('sig').size()
						</groovy>
						<setBody>
							<groovy>
								import ru.seventech.esb.technoprom.dto.DocumentRequestUidDto
								def request = new DocumentRequestUidDto(exchange.properties.document.get('sig').get(exchange.properties.CamelLoopIndex).get('location'))
								return request
							</groovy>
						</setBody>
						<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachSignature.v2.beforeRequest?showAll=false"/>
						<log message="[ZERO-SIGN-LOG] [${exchangeProperty.packageId}] Send request http://${exchangeProperty.attachSignatureUrlWithUid} with body ${body}"/>
						<marshal>
							<json library="Jackson"/>
						</marshal>
						<toD uri="https://${exchangeProperty.attachSignatureUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
						<convertBodyTo type="java.lang.String"/>
						<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachSignature.v2.afterRequest?showAll=false"/>
						<to uri="log:ru.seventech.esb.technoprom.saveDocument.v2.end"/>
					</loop>
				</when>
				<when>
					<groovy>!(exchange.properties.document.get('sig') instanceof List)</groovy>
					<setBody>
						<groovy>
							import ru.seventech.esb.technoprom.dto.DocumentRequestUidDto
							def request = new DocumentRequestUidDto(exchange.properties.document.get('sig').get('location'))
							return request
						</groovy>
					</setBody>
					<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachSignature.v2.beforeRequest?showAll=false"/>
					<log message="[ZERO-SIGN-LOG] [${exchangeProperty.packageId}] Send request http://${exchangeProperty.attachSignatureUrlWithUid} with body ${body}"/>
					<marshal>
						<json library="Jackson"/>
					</marshal>
					<toD uri="https://${exchangeProperty.attachSignatureUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
					<convertBodyTo type="java.lang.String"/>
					<to uri="log:ru.seventech.esb.technoprom.saveDocument.attachSignature.v2.afterRequest?showAll=false"/>
					<to uri="log:ru.seventech.esb.technoprom.saveDocument.v2.end"/>
				</when>
			</choice>
		</route>

		<route id="ru.seventech.esb.technoprom.saveDocuments.v2">
			<from uri="direct:ru.seventech.esb.technoprom.saveDocuments.v2"/>
			<to uri="log:ru.seventech.esb.technoprom.saveDocuments.v2.start"/>
			<loop>
				<groovy>
					exchange.properties.documents.size()
				</groovy>
				<setProperty name="document">
					<groovy>
						exchange.properties.documents.get(exchange.properties.CamelLoopIndex)
					</groovy>
				</setProperty>
				<!--				<process ref="testProcessor"/>-->
				<choice>
					<when>
						<groovy>exchange.properties.document.get("agent") != null</groovy>
						<!--						<process ref="testProcessor"/>-->
						<log message="Document agent gate-rr-adapter ${exchange}" loggingLevel="ERROR" logName="adapter-logging-sys"/>
						<setProperty name="document">
							<groovy>
								exchange.properties.document.get("agent").get("document")
							</groovy>
						</setProperty>
						<to uri="direct:ru.seventech.esb.technoprom.saveDocument.v2"/>
					</when>
					<when>
						<groovy>exchange.properties.document.get("documentId") != null</groovy>
						<to uri="direct:ru.seventech.esb.technoprom.saveDocument.v2"/>
					</when>
				</choice>
			</loop>
			<to uri="log:ru.seventech.esb.technoprom.saveDocuments.v2.end"/>
		</route>

		<route id="ru.seventech.esb.technoprom.prepareRequest.v2">
			<from uri="direct:ru.seventech.esb.technoprom.prepareRequest.v2"/>
			<convertBodyTo type="java.lang.String"/>
			<setProperty name="requestBody">
				<simple>${body}</simple>
			</setProperty>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setBody>
				<simple>${exchangeProperty.requestBody}</simple>
			</setBody>
		</route>

		<route id="performCreateApplicationRequest">
			<from uri="direct:performCreateApplicationRequest"/>
			<setProperty name="createApplicationUrlWithUid">
				<groovy>
					def createApplicationUrlFormatted = sprintf(
					exchange.properties.createApplicationUrl, [exchange.properties.packageId]
					)
					return createApplicationUrlFormatted
				</groovy>
			</setProperty>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setBody>
				<simple>${exchangeProperty.requestBody}</simple>
			</setBody>
			<to uri="log:ru.seventech.esb.technoprom.performPostRequest.beforeRequest?showAll=true"/>
			<log message="[ZERO-SIGN-LOG] [${exchangeProperty.packageId}] Send request http://${exchangeProperty.createApplicationUrlWithUid} with body ${body}"/>
			<toD uri="https://${exchangeProperty.createApplicationUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
			<to uri="log:ru.seventech.esb.technoprom.performPostRequest.afterRequest?showAll=true"/>
		</route>

		<route id="commonDocumentProcessing">
			<from uri="direct:commonDocumentProcessing"/>
			<choice>
				<when>
					<groovy>exchange.properties.documents != null</groovy>
					<setProperty name="outerLoopIndex">
						<groovy>Integer x = 0; return x</groovy>
					</setProperty>
					<loop>
						<groovy>exchange.properties.documents.size()</groovy>
						<setProperty name="documentId">
							<groovy>exchange.properties.documents.get(exchange.properties.outerLoopIndex).get("documentId")</groovy>
						</setProperty>
						<choice>
							<when>
								<groovy>exchange.properties.documents.get(exchange.properties.outerLoopIndex).get("sigFileUID") instanceof List</groovy>
								<setProperty name="innerLoopIndex">
									<groovy>Integer x = 0; return x</groovy>
								</setProperty>
								<loop>
									<groovy>exchange.properties.documents.get(exchange.properties.outerLoopIndex).get("sigFileUID").size()</groovy>
									<setProperty name="sigFileUID">
										<groovy>exchange.properties.documents.get(exchange.properties.outerLoopIndex).get("sigFileUID").get(exchange.properties.innerLoopIndex)</groovy>
									</setProperty>
									<setProperty name="attachSignatureUrl">
										<simple>{{env:url_attachSignature_v2}}</simple>
									</setProperty>
									<setProperty name="attachSignatureUrlWithUid">
										<groovy>
											def attachSignatureUrlFormatted = sprintf(exchange.properties.attachSignatureUrl, [
											exchange.properties.packageId, exchange.properties.documentId
											])
											return attachSignatureUrlFormatted
										</groovy>
									</setProperty>
									<removeHeaders pattern="*"/>
									<setHeader name="Authorization">
										<simple>${exchangeProperty.rosrgatewayToken}</simple>
									</setHeader>
									<setHeader name="CamelHttpMethod">
										<constant>POST</constant>
									</setHeader>
									<setHeader name="Content-Type">
										<constant>application/json</constant>
									</setHeader>
									<setBody>
										<groovy>
											import ru.seventech.esb.technoprom.dto.DocumentRequestUidDto
											def request = new DocumentRequestUidDto(exchange.properties.sigFileUID)
											return request
										</groovy>
									</setBody>
									<to uri="log:ru.seventech.esb.technoprom.addApplication.attachSignature.v2.beforeRequest?showAll=true"/>
									<marshal>
										<json library="Jackson"/>
									</marshal>
                  <toD uri="https://${exchangeProperty.attachSignatureUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
									<to uri="log:ru.seventech.esb.technoprom.addApplication.attachSignature.v2.afterRequest?showAll=true"/>
									<setProperty name="innerLoopIndex">
										<groovy>((Integer) exchange.properties.innerLoopIndex) + 1</groovy>
									</setProperty>
								</loop>
								<setProperty name="innerLoopIndex">
									<groovy>Integer x = 0; return x</groovy>
								</setProperty>
							</when>
							<when>
								<groovy>!(exchange.properties.documents.get(exchange.properties.CamelLoopIndex).get("sigFileUID") instanceof List)</groovy>
								<setProperty name="sigFileUID">
									<groovy>exchange.properties.documents.get(exchange.properties.CamelLoopIndex).get("sigFileUID")</groovy>
								</setProperty>
								<setProperty name="attachSignatureUrl">
									<simple>{{env:url_attachSignature_v2}}</simple>
								</setProperty>
								<setProperty name="attachSignatureUrlWithUid">
									<groovy>
										def attachSignatureUrlFormatted = sprintf(exchange.properties.attachSignatureUrl, [
										exchange.properties.packageId, exchange.properties.documentId
										])
										return attachSignatureUrlFormatted
									</groovy>
								</setProperty>
								<removeHeaders pattern="*"/>
								<setHeader name="Authorization">
									<simple>${exchangeProperty.rosrgatewayToken}</simple>
								</setHeader>
								<setHeader name="CamelHttpMethod">
									<constant>POST</constant>
								</setHeader>
								<setHeader name="Content-Type">
									<constant>application/json</constant>
								</setHeader>
								<setBody>
									<groovy>
										import ru.seventech.esb.technoprom.dto.DocumentRequestUidDto
										def request = new DocumentRequestUidDto(exchange.properties.sigFileUID)
										return request
									</groovy>
								</setBody>
								<to uri="log:ru.seventech.esb.technoprom.addApplication.attachSignature.v2.beforeRequest?showAll=true"/>
								<marshal>
									<json library="Jackson"/>
								</marshal>
                <toD uri="https://${exchangeProperty.attachSignatureUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
								<to uri="log:ru.seventech.esb.technoprom.addApplication.attachSignature.v2.afterRequest?showAll=true"/>
							</when>
						</choice>
						<setProperty name="outerLoopIndex">
							<groovy>((Integer) exchange.properties.outerLoopIndex) + 1</groovy>
						</setProperty>
					</loop>
					<setProperty name="outerLoopIndex">
						<groovy>Integer x = 0; return x</groovy>
					</setProperty>
				</when>
			</choice>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>GET</constant>
			</setHeader>
			<setProperty name="getPackageUrl">
				<simple>{{env:url_getPackage_v2}}</simple>
			</setProperty>
			<setProperty name="getPackageUrlWithUid">
				<groovy>
					def getPackageUrlFormatted = sprintf(exchange.properties.getPackageUrl, [exchange.properties.packageId])
					return getPackageUrlFormatted
				</groovy>
			</setProperty>
			<setBody>
				<simple>${null}</simple>
			</setBody>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.getPackage.v2.beforeRequest?showAll=true"/>
			<toD uri="https://${exchangeProperty.getPackageUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
			<unmarshal>
				<json library="Jackson" unmarshalType="java.util.HashMap"/>
			</unmarshal>
			<setProperty name="packageInfo">
				<simple>${body}</simple>
			</setProperty>
			<setProperty name="createZipUrl">
				<simple>{{env:url_createZip_v2}}</simple>
			</setProperty>
			<setProperty name="createZipUrlWithUid">
				<groovy>
					def createZipUrlFormatted = sprintf(exchange.properties.createZipUrl, [exchange.properties.packageId])
					return createZipUrlFormatted
				</groovy>
			</setProperty>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setBody>
				<simple>${null}</simple>
			</setBody>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.v2.createZip.beforeRequest?showAll=true"/>
			<marshal>
				<json library="Jackson"/>
			</marshal>
      <toD uri="https://${exchangeProperty.createZipUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.v2.createZip.afterRequest?showAll=true"/>
			<setProperty name="sendZipUrl">
				<simple>{{env:url_sendZip_v2}}</simple>
			</setProperty>
			<setProperty name="sendZipUrlWithUid">
				<groovy>
					def sendZipUrlFormatted = sprintf(exchange.properties.sendZipUrl, [exchange.properties.packageId])
					return sendZipUrlFormatted
				</groovy>
			</setProperty>
			<removeHeaders pattern="*"/>
			<setHeader name="Authorization">
				<simple>${exchangeProperty.rosrgatewayToken}</simple>
			</setHeader>
			<setHeader name="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setBody>
				<simple>${null}</simple>
			</setBody>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.v2.sendZip.beforeRequest?showAll=true"/>
			<marshal>
				<json library="Jackson"/>
			</marshal>
      <toD uri="https://${exchangeProperty.sendZipUrlWithUid}?httpClientConfigurer=trustAllHttpClientConfigurer"/>
			<unmarshal>
				<json library="Jackson" unmarshalType="java.util.HashMap"/>
			</unmarshal>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.v2.sendZip.afterRequest?showAll=true"/>
			<setProperty name="sendZipResponse">
				<simple>${body}</simple>
			</setProperty>
			<to uri="log:ru.seventech.esb.technoprom.addApplication.v2.end?showAll=true"/>
		</route>
