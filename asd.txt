public boolean hasMainFileForSignature(
            Map<MultipartFile, List<MultipartFile>> filesMap, 
            MultipartFile signatureFile) {
        
        if (filesMap == null || signatureFile == null) {
            return false;
        }

        String signatureFilename = signatureFile.getOriginalFilename();
        if (signatureFilename == null || !signatureFilename.endsWith(".sig")) {
            return false; // Это не файл подписи
        }

        // Варианты имен главного файла:
        // 1. Для подписей вида "file.txt.sig" → "file.txt"
        String mainFilename1 = signatureFilename.replace(".sig", "");
        
        // 2. Для подписей вида "file.txt.1.sig" → "file.txt"
        String mainFilename2 = signatureFilename.replaceAll("\\.\\d+\\.sig$", "");

        // Проверяем оба варианта
        return filesMap.keySet().stream()
                .map(MultipartFile::getOriginalFilename)
                .filter(Objects::nonNull)
                .anyMatch(name -> name.equals(mainFilename1) || name.equals(mainFilename2));
    }

    /**
     * Альтернативная версия, которая работает с List<MultipartFile> вместо Map
     */
    public boolean hasMainFileForSignature(
            List<MultipartFile> allFiles,
            MultipartFile signatureFile) {
        
        if (allFiles == null || signatureFile == null) {
            return false;
        }

        String signatureFilename = signatureFile.getOriginalFilename();
        if (signatureFilename == null || !signatureFilename.endsWith(".sig")) {
            return false;
        }

        Pattern numberedSigPattern = Pattern.compile("\\.\\d+\\.sig$");
        
        String mainFilename = numberedSigPattern.matcher(signatureFilename)
                .replaceFirst("") // Удаляем ".1.sig", ".2.sig" и т.д.
                .replace(".sig", ""); // Удаляем просто ".sig"

        return allFiles.stream()
                .map(MultipartFile::getOriginalFilename)
                .filter(Objects::nonNull)
                .anyMatch(name -> name.equals(mainFilename));
    }
}
