public class FileSignatureMapper {

    public Map<MultipartFile, List<MultipartFile>> mapFilesToSignatures(List<MultipartFile> files) {
        // Проверка на уникальность имен файлов
        checkUniqueFilenames(files);

        Map<MultipartFile, List<MultipartFile>> result = new HashMap<>();
        Map<String, MultipartFile> fileByName = new HashMap<>();

        // Сначала собираем все файлы в мапу по именам для быстрого доступа
        for (MultipartFile file : files) {
            fileByName.put(file.getOriginalFilename(), file);
        }

        // Для каждого файла ищем его подписи
        for (MultipartFile file : files) {
            String filename = file.getOriginalFilename();
            
            // Если это подпись (уже заканчивается на .sig), пропускаем
            if (filename != null && filename.endsWith(".sig")) {
                continue;
            }

            List<MultipartFile> signatures = new ArrayList<>();
            
            // Проверяем наличие базовой подписи (filename.sig)
            String baseSignatureName = filename + ".sig";
            if (fileByName.containsKey(baseSignatureName)) {
                signatures.add(fileByName.get(baseSignatureName));
            }

            // Проверяем наличие нумерованных подписей (filename.1.sig, filename.2.sig и т.д.)
            int counter = 1;
            while (true) {
                String numberedSignatureName = filename + "." + counter + ".sig";
                if (fileByName.containsKey(numberedSignatureName)) {
                    signatures.add(fileByName.get(numberedSignatureName));
                    counter++;
                } else {
                    break;
                }
            }

            // Добавляем в результат только если у файла есть подписи
            if (!signatures.isEmpty()) {
                result.put(file, signatures);
            }
        }

        return result;
    }

    private void checkUniqueFilenames(List<MultipartFile> files) {
        List<String> filenames = new ArrayList<>();
        for (MultipartFile file : files) {
            String filename = file.getOriginalFilename();
            if (filename == null) {
                throw new IllegalArgumentException("File has no filename");
            }
            if (filenames.contains(filename)) {
                throw new IllegalArgumentException("Duplicate filename found: " + filename);
            }
            filenames.add(filename);
        }
    }
}
